apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 28
    buildToolsVersion "28.0.3"

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    lintOptions {
        abortOnError false
    }
    defaultConfig {
        applicationId "org.hermes.client"
        minSdkVersion 28
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

task buildJnis(type: Exec) {
    def res = commandLine '/bin/bash', '-c',
            'git submodule update --init --recursive && ' +
                    'cd ../../entangled && ' +
                    'git status | head -n 1 | sed \'s/On branch //\''

//    For the time being we just use the commit that the submodule is pointed to
//    we are not going to be updating the repo every time we build the JNI libs.
//    if (res.toString() != 'develop') {
//        println 'Not in develop branch'
//        commandLine '/bin/bash', '-c', 'cd ../../entangled && git reset --hard && git checkout develop'
//    }
    Properties properties = new Properties()
    properties.load(project.rootProject.file('local.properties').newDataInputStream())
    def sdkDir = properties.getProperty('sdk.dir', '')
    def ndkDir = properties.getProperty('ndk.dir', '')
    def cpu_archs = 'armeabi-v7a,arm64-v8a,x86,x86_64'
    def bazel_env_vars = "ANDROID_HOME=${sdkDir} ANDROID_NDK_HOME=${ndkDir}"

    println """
=============================

Android SDK Path: ${sdkDir}
Android NDK Path: ${ndkDir}
entangled repository is on branch: ${res.toString()}

=============================
"""

    commandLine '/bin/bash', '-c', 'cd ../../entangled && ' +
            "${bazel_env_vars} bazel build --fat_apk_cpu='${cpu_archs}' --copt=-Ofast //mobile/android:dummy && " +
            'rm -rf ../android-client/build/jni &&' +
            'echo A | unzip bazel-bin/mobile/android/dummy.apk -d ../android-client/build/jni && ' +
            'cp -r ../android-client/build/jni/lib/ ../android-client/app/src/main/jniLibs'
}

dependencies {
    api 'com.github.iotaledger:iota-java:1.0.0-beta3'
    implementation 'com.android.support:recyclerview-v7:28.0.0'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    annotationProcessor "android.arch.lifecycle:compiler:$rootProject.ext.archLifecycleVersion"
    annotationProcessor 'com.google.dagger:dagger-compiler:2.21'
    //    annotationProcessor 'com.google.dagger:dagger-android-processor:2.21'
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.6.3'
    //    // Optional, if you use support library fragments:
    //    debugImplementation 'com.squareup.leakcanary:leakcanary-support-fragment:1.6.3'
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "android.arch.lifecycle:extensions:$rootProject.ext.archLifecycleVersion"
    implementation "android.arch.persistence.room:runtime:${rootProject.ext.room_version}"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:${rootProject.ext.kotlin_version}"
    implementation "com.android.support:appcompat-v7:${rootProject.ext.support_lib_version}"
    implementation "com.android.support:support-compat:${rootProject.ext.support_lib_version}"
    implementation "com.android.support:design:${rootProject.ext.support_lib_version}"
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    implementation 'com.google.dagger:dagger:2.21'
    implementation 'com.squareup.retrofit2:retrofit:2.5.0'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines:0.19.2'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.1.1'
    implementation 'org.threeten:threetenbp:1.3.8'
    kapt "android.arch.persistence.room:compiler:${rootProject.ext.room_version}"
    //    If you're using classes in dagger.android you'll also want to include:
    //    implementation 'com.google.dagger:dagger-android:2.21'
    //    implementation 'com.google.dagger:dagger-android-support:2.21' // if you use the support libraries
    //    annotationProcessor 'com.google.dagger:dagger-android-processor:2.21'
    releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.6.3'
    testImplementation 'it.ozimov:assertj:2.0.0'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.4.0'
}
